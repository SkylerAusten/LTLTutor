[
    {
        "question": "The green light is never off",
        "options": [
            {
                "option": "G(green)",
                "isCorrect": true,
                "misconceptions": []
            },
            {
                "option": "(F green)",
                "isCorrect": false,
                "misconceptions": [
                    "MisconceptionCode.BadStateQuantification"
                ]
            },
            {
                "option": "green",
                "isCorrect": false,
                "misconceptions": [
                    "MisconceptionCode.ImplicitG",
                    "MisconceptionCode.OtherImplicit"
                ]
            }
        ]
    },
    {
        "question": "Whenever the Red light is on, it is off in the next state and on again in the state after that. ",
        "options": [
            {
                "option": "(G (red -> (X !red) & (X (X red)) ))",
                "isCorrect": true,
                "misconceptions": []
            },
            {
                "option": "(G ((red -> (F (! red))) & (X red)))",
                "isCorrect": false,
                "misconceptions": [
                    "MisconceptionCode.Precedence",
                    "MisconceptionCode.BadStateIndex",
                    "MisconceptionCode.OtherImplicit"
                ]
            },
            {
                "option": "(F ((red -> (F (! red))) & (X red)))",
                "isCorrect": false,
                "misconceptions": [
                    "MisconceptionCode.BadStateQuantification"
                ]
            },
            {
                "option": "((red -> (F (! red))) & (X red))",
                "isCorrect": false,
                "misconceptions": [
                    "MisconceptionCode.ImplicitG"
                ]
            }
        ]
    },
    {
        "question": "The Red light is on in exactly one state (not necessarily the first state).",
        "options": [
            {
                "option": "(F red) & (G (red -> X(G !red)))",
                "isCorrect": true,
                "misconceptions": []
            },
            {
                "option": "F(red & X(G(!red)))",
                "isCorrect": false,
                "misconceptions": [
                    "MisconceptionCode.BadStateIndex"
                ]
            },
            {
                "option": "(F red)",
                "isCorrect": false,
                "misconceptions": [
                    "MisconceptionCode.OtherImplicit"
                ]
            },
            {
                "option": "((F red) & (red -> X(G !red))",
                "isCorrect": false,
                "misconceptions": [
                    "MisconceptionCode.ImplicitG"
                ]
            }
        ]
    },
    {
        "question": "Red light cannot stay on for three states in a row. ",
        "options": [
            {
                "option": "! F(red & (X red) & (X (X red)))",
                "isCorrect": true,
                "misconceptions": []
            },
            {
                "option": "(! (red & (F red)))",
                "isCorrect": false,
                "misconceptions": [
                    "MisconceptionCode.BadStateQuantification"
                ]
            },
            {
                "option": "(! ((r & (F r)) & (F r)))",
                "isCorrect": false,
                "misconceptions": [
                    "MisconceptionCode.BadStateIndex"
                ]
            }
        ]
    },
    {
        "question": "Whenever the Red light is on, the Blue light will be on then or at some point in the future. ",
        "options": [
            {
                "option": "(G (red -> (blue | (F blue))))",
                "isCorrect": true,
                "misconceptions": []
            },
            {
                "option": "(G ((red -> blue) | blue))",
                "isCorrect": false,
                "misconceptions": [
                    "MisconceptionCode.Precedence",
                    "MisconceptionCode.ImplicitF"
                ]
            },
            {
                "option": "((red -> blue) | blue)",
                "isCorrect": false,
                "misconceptions": [
                    "MisconceptionCode.ImplicitG",
                    "MisconceptionCode.OtherImplicit"
                ]
            },
            {
                "option": "(G (red -> (blue | (X blue))))",
                "isCorrect": false,
                "misconceptions": [
                    "MisconceptionCode.BadStateQuantification"
                ]
            }
        ]
    },
    {
        "question": "The Red light is on for zero or more states, and then turns off and remains off in the future.",
        "options": [
            {
                "option": "(F (G !red))",
                "isCorrect": true,
                "misconceptions": []
            },
            {
                "option": "(G (G (! red)))",
                "isCorrect": false,
                "misconceptions": [
                    "MisconceptionCode.BadStateQuantification"
                ]
            },
            {
                "option": "(G (! red))",
                "isCorrect": false,
                "misconceptions": [
                    "MisconceptionCode.ImplicitF"
                ]
            },
            {
                "option": "(F (! red))",
                "isCorrect": false,
                "misconceptions": [
                    "MisconceptionCode.ImplicitG"
                ]
            }
        ]
    }
]